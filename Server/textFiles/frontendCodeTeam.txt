import React, { useState } from 'react';
import axios from 'axios';

export const Registration = () => {
  const [user1, setUser1] = useState({ name: '', email: '', college: '', phone: '', image: null });
  const [user2, setUser2] = useState({ name: '', email: '', college: '', phone: '', image: null });
  const [isTeam, setIsTeam] = useState(false);
  const [transactionId, setTransactionId] = useState('');
  const [paymentScreenshot, setPaymentScreenshot] = useState(null);

  const handleSubmit = async (e) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append('user1', JSON.stringify(user1));
    formData.append('user1Image', user1.image);
    if (isTeam) {
      formData.append('user2', JSON.stringify(user2));
      formData.append('user2Image', user2.image);
    }
    formData.append('transactionId', transactionId);
    formData.append('paymentScreenshot', paymentScreenshot);

    try {
      const response = await axios.post('http://localhost:5000/api/register', formData, {
        headers: { 'Content-Type': 'multipart/form-data' },
      });
      alert(response.data.message);
    } catch (error) {
      console.error(error);
      alert('Registration failed. Please try again.');
    }
  };

  return (
    <div className="bg-red-300 min-h-screen w-full flex mx-auto items-center justify-center">
      <div className="bg-gray-700 w-11/12 flex flex-col justify-center items-center p-8 rounded-md">
        <h1 className="text-white text-2xl mb-4">Get Registered</h1>
        <form onSubmit={handleSubmit} className="w-full max-w-lg">
          <div className="mb-4">
            <h2 className="text-white text-xl mb-2">User 1 Details</h2>
            <input 
              type="text"
              placeholder="Name"
              className="w-full p-2 mb-2 rounded"
              value={user1.name}
              onChange={(e) => setUser1({ ...user1, name: e.target.value })}
              required
            />
            <input
              type="email"
              placeholder="Email"
              className="w-full p-2 mb-2 rounded"
              value={user1.email}
              onChange={(e) => setUser1({ ...user1, email: e.target.value })}
              required
            />
            <input
              type="text"
              placeholder="College"
              className="w-full p-2 mb-2 rounded"
              value={user1.college}
              onChange={(e) => setUser1({ ...user1, college: e.target.value })}
              required
            />
            <input
              type="number"
              placeholder="Phone"
              className="w-full p-2 mb-2 rounded"
              value={user1.phone}
              onChange={(e) => setUser1({ ...user1, phone: e.target.value })}
              required
            />
            <input
              type="file"
              className="w-full p-2 mb-2 rounded"
              onChange={(e) => setUser1({ ...user1, image: e.target.files[0] })}
              required
            />
          </div>

          {isTeam && (
            <div className="mb-4">
              <h2 className="text-white text-xl mb-2">User 2 Details</h2>
              <input
                type="text"
                placeholder="Name"
                className="w-full p-2 mb-2 rounded"
                value={user2.name}
                onChange={(e) => setUser2({ ...user2, name: e.target.value })}
              />
              <input
                type="email"
                placeholder="Email"
                className="w-full p-2 mb-2 rounded"
                value={user2.email}
                onChange={(e) => setUser2({ ...user2, email: e.target.value })}
              />
              <input
                type="text"
                placeholder="College"
                className="w-full p-2 mb-2 rounded"
                value={user2.college}
                onChange={(e) => setUser2({ ...user2, college: e.target.value })}
              />
              <input
                type="number"
                placeholder="Phone"
                className="w-full p-2 mb-2 rounded"
                value={user2.phone}
                onChange={(e) => setUser2({ ...user2, phone: e.target.value })}
              />
              <input
                type="file"
                className="w-full p-2 mb-2 rounded"
                onChange={(e) => setUser2({ ...user2, image: e.target.files[0] })}
              />
            </div>
          )}

          <div className="mb-4">
            <h2 className="text-white text-xl mb-2">Transaction Details</h2>
            <input
              type="text"
              placeholder="Transaction ID"
              className="w-full p-2 mb-2 rounded"
              value={transactionId}
              onChange={(e) => setTransactionId(e.target.value)}
              required
            />
            <input
              type="file"
              className="w-full p-2 mb-2 rounded"
              onChange={(e) => setPaymentScreenshot(e.target.files[0])}
              required
            />
          </div>

          <button
            type="button"
            className="bg-blue-500 text-white p-2 rounded mb-4"
            onClick={() => setIsTeam(!isTeam)}
          >
            {isTeam ? 'Remove User 2' : 'Add User 2'}
          </button>

          <button
            type="submit"
            className="bg-green-500 text-white p-2 rounded w-full"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
  );
};
